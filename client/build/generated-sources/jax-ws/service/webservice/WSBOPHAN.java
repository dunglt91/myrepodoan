
package service.webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSBOPHAN", targetNamespace = "http://webservice.service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSBOPHAN {


    /**
     * 
     * @return
     *     returns service.webservice.Convert
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "initConv", targetNamespace = "http://webservice.service/", className = "service.webservice.InitConv")
    @ResponseWrapper(localName = "initConvResponse", targetNamespace = "http://webservice.service/", className = "service.webservice.InitConvResponse")
    @Action(input = "http://webservice.service/WSBOPHAN/initConvRequest", output = "http://webservice.service/WSBOPHAN/initConvResponse")
    public Convert initConv();

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Tlu20bophanDeletebyId")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Tlu20bophanDeletebyId", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BophanDeletebyId")
    @ResponseWrapper(localName = "Tlu20bophanDeletebyIdResponse", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BophanDeletebyIdResponse")
    @Action(input = "http://webservice.service/WSBOPHAN/Tlu20bophanDeletebyIdRequest", output = "http://webservice.service/WSBOPHAN/Tlu20bophanDeletebyIdResponse")
    public String tlu20BophanDeletebyId(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param isActive
     * @param id
     * @param createdBy
     * @param tenbophan
     * @param createdAt
     * @param mabophan
     * @return
     *     returns java.lang.String
     * @throws ParseException_Exception
     */
    @WebMethod(operationName = "Tlu20bophanUpdatebyID")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Tlu20bophanUpdatebyID", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BophanUpdatebyID")
    @ResponseWrapper(localName = "Tlu20bophanUpdatebyIDResponse", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BophanUpdatebyIDResponse")
    @Action(input = "http://webservice.service/WSBOPHAN/Tlu20bophanUpdatebyIDRequest", output = "http://webservice.service/WSBOPHAN/Tlu20bophanUpdatebyIDResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://webservice.service/WSBOPHAN/Tlu20bophanUpdatebyID/Fault/ParseException")
    })
    public String tlu20BophanUpdatebyID(
        @WebParam(name = "id", targetNamespace = "")
        int id,
        @WebParam(name = "createdBy", targetNamespace = "")
        String createdBy,
        @WebParam(name = "createdAt", targetNamespace = "")
        String createdAt,
        @WebParam(name = "isActive", targetNamespace = "")
        boolean isActive,
        @WebParam(name = "Tenbophan", targetNamespace = "")
        String tenbophan,
        @WebParam(name = "Mabophan", targetNamespace = "")
        String mabophan)
        throws ParseException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<service.webservice.Tlu20Bophan>
     */
    @WebMethod(operationName = "Tlu20bophanDisplayAll")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Tlu20bophanDisplayAll", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BophanDisplayAll")
    @ResponseWrapper(localName = "Tlu20bophanDisplayAllResponse", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BophanDisplayAllResponse")
    @Action(input = "http://webservice.service/WSBOPHAN/Tlu20bophanDisplayAllRequest", output = "http://webservice.service/WSBOPHAN/Tlu20bophanDisplayAllResponse")
    public List<Tlu20Bophan> tlu20BophanDisplayAll();

    /**
     * 
     * @param tenbophan
     * @param mabophan
     * @return
     *     returns java.util.List<service.webservice.Tlu20Bophan>
     */
    @WebMethod(operationName = "Tlu20bophanFindCommon")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Tlu20bophanFindCommon", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BophanFindCommon")
    @ResponseWrapper(localName = "Tlu20bophanFindCommonResponse", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BophanFindCommonResponse")
    @Action(input = "http://webservice.service/WSBOPHAN/Tlu20bophanFindCommonRequest", output = "http://webservice.service/WSBOPHAN/Tlu20bophanFindCommonResponse")
    public List<Tlu20Bophan> tlu20BophanFindCommon(
        @WebParam(name = "Tenbophan", targetNamespace = "")
        String tenbophan,
        @WebParam(name = "Mabophan", targetNamespace = "")
        String mabophan);

    /**
     * 
     * @param isActive
     * @param createdBy
     * @param tenbophan
     * @param createdAt
     * @param mabophan
     * @return
     *     returns java.lang.String
     * @throws ParseException_Exception
     */
    @WebMethod(operationName = "Tlu20BoPhanInsert")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Tlu20BoPhanInsert", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BoPhanInsert")
    @ResponseWrapper(localName = "Tlu20BoPhanInsertResponse", targetNamespace = "http://webservice.service/", className = "service.webservice.Tlu20BoPhanInsertResponse")
    @Action(input = "http://webservice.service/WSBOPHAN/Tlu20BoPhanInsertRequest", output = "http://webservice.service/WSBOPHAN/Tlu20BoPhanInsertResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://webservice.service/WSBOPHAN/Tlu20BoPhanInsert/Fault/ParseException")
    })
    public String tlu20BoPhanInsert(
        @WebParam(name = "createdBy", targetNamespace = "")
        String createdBy,
        @WebParam(name = "createdAt", targetNamespace = "")
        String createdAt,
        @WebParam(name = "isActive", targetNamespace = "")
        boolean isActive,
        @WebParam(name = "Tenbophan", targetNamespace = "")
        String tenbophan,
        @WebParam(name = "Mabophan", targetNamespace = "")
        String mabophan)
        throws ParseException_Exception
    ;

    /**
     * 
     * @return
     *     returns service.webservice.Daobophan
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "init", targetNamespace = "http://webservice.service/", className = "service.webservice.Init")
    @ResponseWrapper(localName = "initResponse", targetNamespace = "http://webservice.service/", className = "service.webservice.InitResponse")
    @Action(input = "http://webservice.service/WSBOPHAN/initRequest", output = "http://webservice.service/WSBOPHAN/initResponse")
    public Daobophan init();

}
