/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;
import dunglt.qlns.client.constant.Constant;
import dunglt.qlns.client.util.ValidateUtil;
import java.awt.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import service.webservice.Tlu20DieuKienTuyenDung;
import service.webservice.Tlu30Chitietdktd;
/**
 *
 * @author dunglt
 */
public class TieuChiKHTD extends javax.swing.JFrame {
    
    /**
     * start declare static local variable
     */
        
        private static int idChiTietDktd;
   
     /**
     * End declare static local variable
     */
    
    /**
     * Creates new form TieuChiKHTD
     */
    public TieuChiKHTD() {
        this.setResizable(false);
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();
        viewDKTD();
        viewChiTietDKTD();
    }
    
    public void viewDKTD() {
        DefaultTableModel model = new DefaultTableModel();
        ((DefaultTableModel) _tblChiTietDKTD.getModel()).setNumRows(0);
        model = (DefaultTableModel) this._tblChiTietDKTD.getModel();
        for (Tlu20DieuKienTuyenDung dktd : tlu20DktdDisplayAll()) {
            model.addRow(new Object[]{dktd.getMadmdktd(), dktd.getTendmdktd()});
        }
        model.fireTableDataChanged();
    }
    
    private void viewChiTietDKTD() {
        DefaultTableModel model = new DefaultTableModel();
        ((DefaultTableModel) _tblChiTiet.getModel()).setNumRows(0);
        model = (DefaultTableModel) this._tblChiTiet.getModel();
        for (Tlu30Chitietdktd chitietdktd : tlu30ChitietdktddDisplayAll()) {
            model.addRow(new Object[]{chitietdktd.getMachitietdktd(), chitietdktd.getTenchitietdktd(), chitietdktd.getKehoachtuyendung(), chitietdktd.getDiemcandat()});
        }
        model.fireTableDataChanged();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        _tfDiemCanDatChiTietDktd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        _tfKeHoachSoChiTietDktd = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        _tfMaChiTietDktd = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        _tfTenChiTietDktd = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        _tblChiTietDKTD = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        _tblChiTiet = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(224, 230, 237));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(java.awt.Color.white);

        jPanel2.setBackground(new java.awt.Color(224, 230, 237));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        _tfDiemCanDatChiTietDktd.setBackground(java.awt.Color.white);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLabel4.setText("Điểm cần đạt");

        _tfKeHoachSoChiTietDktd.setBackground(java.awt.Color.white);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLabel3.setText("Kế hoạch số");

        _tfMaChiTietDktd.setBackground(java.awt.Color.white);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLabel2.setText("Mã điều kiện tuyển dụng");

        _tfTenChiTietDktd.setBackground(java.awt.Color.white);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        jLabel1.setText("Tên điều kiện tuyển dụng");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(_tfTenChiTietDktd)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 29, Short.MAX_VALUE))
                    .addComponent(_tfMaChiTietDktd)
                    .addComponent(_tfKeHoachSoChiTietDktd)
                    .addComponent(_tfDiemCanDatChiTietDktd))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_tfTenChiTietDktd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_tfMaChiTietDktd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_tfKeHoachSoChiTietDktd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_tfDiemCanDatChiTietDktd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(224, 230, 237));
        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(""), null));

        jButton22.setBackground(new java.awt.Color(52, 79, 223));
        jButton22.setForeground(java.awt.Color.white);
        jButton22.setText("Thêm");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setBackground(new java.awt.Color(52, 79, 223));
        jButton23.setForeground(java.awt.Color.white);
        jButton23.setText("sửa");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setBackground(new java.awt.Color(52, 79, 223));
        jButton24.setForeground(java.awt.Color.white);
        jButton24.setText("xóa");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton25.setBackground(new java.awt.Color(52, 79, 223));
        jButton25.setForeground(java.awt.Color.white);
        jButton25.setText("tìm kiếm");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton25)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(224, 230, 237));
        jPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách điều kiện tuyển dụng"), null));

        _tblChiTietDKTD.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        _tblChiTietDKTD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên điều kiện tuyển dụng", "Mã điều kiện tuyển dụng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        _tblChiTietDKTD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                _tblChiTietDKTDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(_tblChiTietDKTD);
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        JTableHeader anHeader = _tblChiTietDKTD.getTableHeader();
        anHeader.setBackground(new Color(0).cyan);
        anHeader.setForeground(new Color(0).blue);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(224, 230, 237));
        jPanel5.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách chi tiết kế hoạch tuyển dụng"), null));

        _tblChiTiet.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        _tblChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã điều kiện tuyển dụng", "Tên điều kiện tuyển dung", "Kế hoạch số", "Điểm cần đạt"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        _tblChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                _tblChiTietMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(_tblChiTiet);
        jScrollPane2.getViewport().setBackground(Color.WHITE);
        JTableHeader anHeader1 = _tblChiTiet.getTableHeader();
        anHeader1.setBackground(new Color(0).cyan);
        anHeader1.setForeground(new Color(0).blue);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(0, 0, 992, 718);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        if(ValidateUtil.isNotNull(_tfKeHoachSoChiTietDktd.getText()) &&
            ValidateUtil.isNotNull(_tfDiemCanDatChiTietDktd.getText()) &&
            ValidateUtil.isNotNull(_tfMaChiTietDktd.getText()) &&
            ValidateUtil.isNotNull(_tfTenChiTietDktd.getText())) {
            String mess = Constant.BLANK;
            mess = tlu30ChitietdktdUpdatebyID(idChiTietDktd, _tfKeHoachSoChiTietDktd.getText(), _tfMaChiTietDktd.getText(), _tfTenChiTietDktd.getText(), Float.parseFloat(_tfDiemCanDatChiTietDktd.getText()));
            if(mess.equals(Constant.SUCCESS)) {
                JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
            }
            viewChiTietDKTD();
        } else {
            JOptionPane.showMessageDialog(rootPane, "Thiếu thông tin", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        if(ValidateUtil.isNotNull(_tfKeHoachSoChiTietDktd.getText()) &&
            ValidateUtil.isNotNull(_tfDiemCanDatChiTietDktd.getText()) &&
            ValidateUtil.isNotNull(_tfMaChiTietDktd.getText()) &&
            ValidateUtil.isNotNull(_tfTenChiTietDktd.getText())) {
            if(tlu30ChitietdktdFindCommon(_tfKeHoachSoChiTietDktd.getText(), 
                    _tfMaChiTietDktd.getText(), null).isEmpty()) {
                tlu30ChitietdktdInsert(_tfKeHoachSoChiTietDktd.getText(),
                        _tfMaChiTietDktd.getText(), _tfTenChiTietDktd.getText(),
                        Float.parseFloat(_tfDiemCanDatChiTietDktd.getText()));
                JOptionPane.showMessageDialog(rootPane, "Thêm thành công");
                viewChiTietDKTD();

            } else {
                JOptionPane.showMessageDialog(rootPane, "Tồn tại mã " +  _tfMaChiTietDktd.getText() + " ứng với KHS "+ _tfKeHoachSoChiTietDktd.getText(), "Error", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Thiếu thông tin", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void _tblChiTietDKTDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__tblChiTietDKTDMouseClicked
        int row = _tblChiTietDKTD.getSelectedRow();
        String maDktd = (_tblChiTietDKTD.getModel().getValueAt(row, 0).toString());
        String tenDktd = (_tblChiTietDKTD.getModel().getValueAt(row, 1).toString());
        java.util.List<Tlu20DieuKienTuyenDung> lstDktd = tlu20DieuKienTuyenDungFindCommon(tenDktd,maDktd );
        _tfTenChiTietDktd.setText(lstDktd.get(0).getTendmdktd());
        _tfMaChiTietDktd.setText(lstDktd.get(0).getMadmdktd());

        _tfKeHoachSoChiTietDktd.setText("");
        // float f = Float.
        _tfDiemCanDatChiTietDktd.setText("");
    }//GEN-LAST:event__tblChiTietDKTDMouseClicked

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        viewChiTietDKTD();
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        if(idChiTietDktd > 0) {
            tlu30ChitietdktdDeletebyId(idChiTietDktd);
        } else {
            JOptionPane.showMessageDialog(rootPane, 
                    "Chưa chọn chi tiết điều kiện tuyển dụng từ danh sách", 
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void _tblChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event__tblChiTietMouseClicked
        int row = _tblChiTiet.getSelectedRow();
        String maDktd = (_tblChiTiet.getModel().getValueAt(row, 0).toString());
        String KHS = (_tblChiTiet.getModel().getValueAt(row, 2).toString());
        java.util.List<Tlu30Chitietdktd> lstchitiet = tlu30ChitietdktdFindCommon(KHS,maDktd , null);
        _tfTenChiTietDktd.setText(lstchitiet.get(0).getTenchitietdktd());
        _tfMaChiTietDktd.setText(lstchitiet.get(0).getMachitietdktd());
        _tfKeHoachSoChiTietDktd.setText(lstchitiet.get(0).getKehoachtuyendung());
        _tfDiemCanDatChiTietDktd.setText(lstchitiet.get(0).getDiemcandat() + "");
        idChiTietDktd = lstchitiet.get(0).getId();
        System.out.println("idChiTietDktd   " + idChiTietDktd);
    }//GEN-LAST:event__tblChiTietMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TieuChiKHTD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TieuChiKHTD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TieuChiKHTD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TieuChiKHTD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TieuChiKHTD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable _tblChiTiet;
    private javax.swing.JTable _tblChiTietDKTD;
    private javax.swing.JTextField _tfDiemCanDatChiTietDktd;
    private javax.swing.JTextField _tfKeHoachSoChiTietDktd;
    private javax.swing.JTextField _tfMaChiTietDktd;
    private javax.swing.JTextField _tfTenChiTietDktd;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private static java.util.List<service.webservice.Tlu30Chitietdktd> tlu30ChitietdktddDisplayAll() {
        service.webservice.WSTLU30CHITIETDKTD_Service service = new service.webservice.WSTLU30CHITIETDKTD_Service();
        service.webservice.WSTLU30CHITIETDKTD port = service.getWSTLU30CHITIETDKTDPort();
        return port.tlu30ChitietdktddDisplayAll();
    }

    private static java.util.List<service.webservice.Tlu30Chitietdktd> tlu30ChitietdktdFindCommon(java.lang.String kehoachtuyendung, java.lang.String machitietdktd, java.lang.String tenchitietdktd) {
        service.webservice.WSTLU30CHITIETDKTD_Service service = new service.webservice.WSTLU30CHITIETDKTD_Service();
        service.webservice.WSTLU30CHITIETDKTD port = service.getWSTLU30CHITIETDKTDPort();
        return port.tlu30ChitietdktdFindCommon(kehoachtuyendung, machitietdktd, tenchitietdktd);
    }

    private static java.util.List<service.webservice.Tlu20DieuKienTuyenDung> tlu20DktdDisplayAll() {
        service.webservice.WsTlu20DieuKienTuyenDung_Service service = new service.webservice.WsTlu20DieuKienTuyenDung_Service();
        service.webservice.WsTlu20DieuKienTuyenDung port = service.getWsTlu20DieuKienTuyenDungPort();
        return port.tlu20DktdDisplayAll();
    }

    private static java.util.List<service.webservice.Tlu20DieuKienTuyenDung> tlu20DieuKienTuyenDungFindCommon(java.lang.String madmdktd, java.lang.String tendmdktd) {
        service.webservice.WsTlu20DieuKienTuyenDung_Service service = new service.webservice.WsTlu20DieuKienTuyenDung_Service();
        service.webservice.WsTlu20DieuKienTuyenDung port = service.getWsTlu20DieuKienTuyenDungPort();
        return port.tlu20DktdFindCommon(madmdktd, tendmdktd);
    }

    private static String tlu30ChitietdktdInsert(java.lang.String kehoachtuyendung, java.lang.String machitietdktd, java.lang.String tenchitietdktd, float diemcandatDiemcandat) {
        service.webservice.WSTLU30CHITIETDKTD_Service service = new service.webservice.WSTLU30CHITIETDKTD_Service();
        service.webservice.WSTLU30CHITIETDKTD port = service.getWSTLU30CHITIETDKTDPort();
        return port.tlu30ChitietdktdInsert(kehoachtuyendung, machitietdktd, tenchitietdktd, diemcandatDiemcandat);
    }

    private static String tlu30ChitietdktdUpdatebyID(int iddktd, java.lang.String kehoachtuyendung, java.lang.String machitietdktd, java.lang.String tenchitietdktd, float diemcandatDiemcandat) {
        service.webservice.WSTLU30CHITIETDKTD_Service service = new service.webservice.WSTLU30CHITIETDKTD_Service();
        service.webservice.WSTLU30CHITIETDKTD port = service.getWSTLU30CHITIETDKTDPort();
        return port.tlu30ChitietdktdUpdatebyID(iddktd, kehoachtuyendung, machitietdktd, tenchitietdktd, diemcandatDiemcandat);
    }

    private static String tlu30ChitietdktdDeletebyId(int iddktd) {
        service.webservice.WSTLU30CHITIETDKTD_Service service = new service.webservice.WSTLU30CHITIETDKTD_Service();
        service.webservice.WSTLU30CHITIETDKTD port = service.getWSTLU30CHITIETDKTDPort();
        return port.tlu30ChitietdktdDeletebyId(iddktd);
    }

    
}
